{
  "Comment": "Express Step Functions",
  "StartAt": "Lambda01Task",
  "States": {
    "Lambda01Task": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${Lambda01TaskArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Catch":[{
        "ErrorEquals": ["States.ALL"],
        "Next": "Lambda01TaskError"
      }],
      "Next": "Lambda02Map01"
    },
    "Lambda02Map01": {
      "Type": "Map",
      "MaxConcurrency": 0,
      "InputPath": "$",
      "ItemsPath": "$.list",
      "Parameters": {
        "item.$": "$$.Map.Item.Value",
        "stage_type.$": "$.stage_type"
      },
      "Next": "Lambda03Task",
      "Iterator": {
        "StartAt": "Lambda02Map01Task",
        "States": {
          "Lambda02Map01Task": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "${Lambda02Map01TaskArn}"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "Catch":[{
              "ErrorEquals": ["States.ALL"],
              "Next": "Lambda02Map01TaskError"
              }],
            "End": true
          },
          "Lambda02Map01TaskError":{
            "Type":"Pass",     
            "End": true
          } 
        }
      }
    },
    "Lambda01TaskError":{
      "Type":"Pass",     
      "Next": "Lambda03Task"
    },
    "Lambda03Task": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${Lambda03TaskArn}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "End": true
    }
  }
}